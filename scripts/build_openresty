#!/bin/bash
# Build OpenResty and modules for Heroku.
# This script is designed to run in a Heroku Stack Docker
# image. More information on the Heroku Stack can be found
# at https://devcenter.heroku.com/articles/stack
set -euo pipefail

OPENRESTY_DIR="/app/openresty"
mkdir -p "$OPENRESTY_DIR"

OPENRESTY_VERSION=${OPENRESTY_VERSION-1.19.3.1}
UUID4_VERSION=${UUID4_VERSION-master}
LUAROCKS_VERSION=${LUAROCKS_VERSION-3.4.0}

openresty_tarball_url=https://openresty.org/download/openresty-${OPENRESTY_VERSION}.tar.gz
uuid4_url=https://github.com/cybozu/nginx-uuid4-module/archive/${UUID4_VERSION}.tar.gz
luarocks_tarball_url=https://github.com/luarocks/luarocks/archive/v${LUAROCKS_VERSION}.tar.gz

temp_dir=$(mktemp -d /tmp/openresty.XXXXXXXXXX)

cd $temp_dir
echo "Temp dir: $temp_dir"

echo "Downloading $openresty_tarball_url"
curl -L $openresty_tarball_url | tar xzv

echo "Downloading $uuid4_url"
(cd openresty-${OPENRESTY_VERSION} && curl -L $uuid4_url | tar xvz )

echo "Downloading $luarocks_tarball_url"
(cd openresty-${OPENRESTY_VERSION} && curl -L $luarocks_tarball_url | tar xvz )


# This will build `openresty` and `luarocks`
(
  cd openresty-${OPENRESTY_VERSION}
  ./configure \
    -j8 \
    --with-pcre-jit \
    --with-http_gzip_static_module \
    --with-http_realip_module \
    --with-http_ssl_module \
    --prefix="$OPENRESTY_DIR" \
    --add-module=${temp_dir}/openresty-${OPENRESTY_VERSION}/nginx-uuid4-module-${UUID4_VERSION}
  make install
  cd luarocks-${LUAROCKS_VERSION}
  ./configure --prefix="$OPENRESTY_DIR/luarocks" --with-lua="$OPENRESTY_DIR/luajit"
  make
  make install
)

export PATH="$PATH:$OPENRESTY_DIR/bin:$OPENRESTY_DIR/luajit/bin:$OPENRESTY_DIR/luarocks/bin"
opm get thibaultcha/lua-resty-jit-uuid 3scale/lua-resty-url cdbattags/lua-resty-jwt ledgetech/lua-resty-http
luarocks install lapis lua-resty-fernet

echo "openresty/${OPENRESTY_VERSION}" > "$OPENRESTY_DIR/version.txt"
tar -zcvf /tmp/openresty-"${STACK}".tar.gz -C "$OPENRESTY_DIR" .
cp /tmp/openresty-"${STACK}".tar.gz "$1"
